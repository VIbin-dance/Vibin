import { IvsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IvsClient";
import { BatchGetStreamKeyRequest, BatchGetStreamKeyResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type BatchGetStreamKeyCommandInput = BatchGetStreamKeyRequest;
export declare type BatchGetStreamKeyCommandOutput = BatchGetStreamKeyResponse & __MetadataBearer;
/**
 * <p>Performs <a>GetStreamKey</a> on multiple ARNs simultaneously.</p>
 */
export declare class BatchGetStreamKeyCommand extends $Command<BatchGetStreamKeyCommandInput, BatchGetStreamKeyCommandOutput, IvsClientResolvedConfig> {
    readonly input: BatchGetStreamKeyCommandInput;
    constructor(input: BatchGetStreamKeyCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IvsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchGetStreamKeyCommandInput, BatchGetStreamKeyCommandOutput>;
    private serialize;
    private deserialize;
}
