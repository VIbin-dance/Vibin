import { IvsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IvsClient";
import { GetStreamRequest, GetStreamResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export interface GetStreamCommandInput extends GetStreamRequest {
}
export interface GetStreamCommandOutput extends GetStreamResponse, __MetadataBearer {
}
/**
 * <p>Gets information about the active (live) stream on a specified channel.</p>
 */
export declare class GetStreamCommand extends $Command<GetStreamCommandInput, GetStreamCommandOutput, IvsClientResolvedConfig> {
    readonly input: GetStreamCommandInput;
    constructor(input: GetStreamCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IvsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetStreamCommandInput, GetStreamCommandOutput>;
    private serialize;
    private deserialize;
}
