import { IvsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IvsClient";
import { ImportPlaybackKeyPairRequest, ImportPlaybackKeyPairResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type ImportPlaybackKeyPairCommandInput = ImportPlaybackKeyPairRequest;
export declare type ImportPlaybackKeyPairCommandOutput = ImportPlaybackKeyPairResponse & __MetadataBearer;
/**
 * <p>Imports the public portion of a new key pair and returns its <code>arn</code> and
 *         <code>fingerprint</code>. The <code>privateKey</code> can then be used to generate viewer
 *       authorization tokens, to grant viewers access to authorized channels.</p>
 */
export declare class ImportPlaybackKeyPairCommand extends $Command<ImportPlaybackKeyPairCommandInput, ImportPlaybackKeyPairCommandOutput, IvsClientResolvedConfig> {
    readonly input: ImportPlaybackKeyPairCommandInput;
    constructor(input: ImportPlaybackKeyPairCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IvsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ImportPlaybackKeyPairCommandInput, ImportPlaybackKeyPairCommandOutput>;
    private serialize;
    private deserialize;
}
