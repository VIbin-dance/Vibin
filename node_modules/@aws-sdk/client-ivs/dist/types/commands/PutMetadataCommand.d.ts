import { IvsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IvsClient";
import { PutMetadataRequest } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type PutMetadataCommandInput = PutMetadataRequest;
export declare type PutMetadataCommandOutput = __MetadataBearer;
/**
 * <p>Inserts metadata into an RTMPS stream for the specified channel. A maximum of 5 requests
 *       per second per channel is allowed, each with a maximum 1KB payload.</p>
 */
export declare class PutMetadataCommand extends $Command<PutMetadataCommandInput, PutMetadataCommandOutput, IvsClientResolvedConfig> {
    readonly input: PutMetadataCommandInput;
    constructor(input: PutMetadataCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IvsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutMetadataCommandInput, PutMetadataCommandOutput>;
    private serialize;
    private deserialize;
}
